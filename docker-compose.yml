services:
    laravel.test:
        build:
            context: './docker/runtime/8.4'
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                ACCEPT_EULA: '${ACCEPT_EULA}'   # Accept the EULA to compile
        image: 'sail-8.4/app'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - meilisearch
            - mailpit
            - selenium
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        ports:
            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
        volumes:
            - 'sail-meilisearch:/meili_data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - wget
                - '--no-verbose'
                - '--spider'
                - 'http://127.0.0.1:7700/health'
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
    selenium:
        image: selenium/standalone-chromium
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - '/dev/shm:/dev/shm'
        networks:
            - sail
        # Microsoft SQL Server
    sqlsrv:
        image: 'mcr.microsoft.com/mssql/server:2022-latest'
        # image: 'mcr.microsoft.com/azure-sql-server' # Uncomment if ARM64
        ports:
            # Forward the database port to the host
            - '${FORWARD_DB_PORT:-1433}:1433'
        environment:
            # Add a default Super Admin password that is strong
            MSSQL_SA_PASSWORD: '${DB_ROOT_PASSWORD}'
            # The default Database Name to connect to.
            MSSQL_DB_NAME: '${DB_DATABASE}'
            # The default Database User to connect as.
            MSSQL_USER: '${DB_USERNAME}'
            # The Database User Password (not the super admin).
            MSSQL_PASSWORD: '${DB_PASSWORD}'
            # Accept the EULA, or fail at running.
            ACCEPT_EULA: '${ACCEPT_EULA}'
        volumes:
            # Create a volume for persistence
            - 'sail-sqlsrv:/var/opt/mssql'
            # Use a custom custom entrypoint
            - '.devcontainer/entrypoint.sh:/entrypoint.sh'
        networks:
            - sail
        entrypoint: '/entrypoint.sh'
        healthcheck:
            # This simple test checks for the port availability, works on
            # on both x64 and ARM64 versions of Azure Edge SQL, plus the
            # x64 version of Microsoft SQL Server.
            test:
                - CMD
                - 'timeout'
                - '1'
                - 'bash'
                - '-c'
                - 'cat < /dev/null > /dev/tcp/127.0.0.1/1433'
            timeout: 5s
            retries: 3
networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    sail-meilisearch:
        driver: local
    sail-sqlsrv:
        driver: local
